1. Done and Tested
JCR/OCM persistent subscriptions
 - scope of subscriptions
 - bindingRefined
 - throwing CREATE,DELETE,ADD_CHILD,REMOVE_CHILD,ADD_REFERENCE,REMOVE_REFERENCE and UPDATE events

JCR/OCM demarcated subscriptions
 - throwing CREATE,DELETE,ADD_CHILD,REMOVE_CHILD,ADD_REFERENCE,REMOVE_REFERENCE and UPDATE events

JPA/Hibernate persistent subscriptions
 - scope of subscriptions 
 - bindingRefined
 - throwing CREATE,DELETE,ADD_CHILD,REMOVE_CHILD,ADD_REFERENCE,REMOVE_REFERENCE and UPDATE events

JPA/Hibernate demarcated subscriptions
 - throwing CREATE,DELETE,ADD_CHILD,REMOVE_CHILD,ADD_REFERENCE,REMOVE_REFERENCE and UPDATE events

Timer Event
 - OCCUR,CREATE,SUSPEND,RESUME,TERMINATE,PARENT_TERMINATE

Milestone
 - entry criteria achieved
 - requiredRule
 - repetitionRule
 - OCCUR,CREATE,SUSPEND,RESUME,TERMINATE,PARENT_TERMINATE

CaseTask
 - basic call
 - entry criteria achieved
 - automaticActivationRule
 - exit criteria achieved
 - parameterMapping
 - EXIT,DISABLE,ENABLE,MANUAL_START,START,COMPLETE,TERMINATE,FAULT,SUSPEND,RESUME

Human Task
 - automaticActivationRule
 - repetitionRule
 - entry criteria achieved
 - exit criteria achieved
 - EXIT,DISABLE,ENABLE,MANUAL_START,START,COMPLETE,TERMINATE,FAULT,SUSPEND,RESUME

UserEvent
 - OCCUR, CREATE,SUSPEND,RESUME,TERMINATE,PARENT_TERMINATE
 
 
CaseModel
 - auto completion
 - manual completion
 - CLOSE, COMPLETE,CREATE, SUSPEND, REACTIVATE (from suspended),TERMINATE,FAULT


Generate OCM and JPA test Java classes from UML along with CaseFileItemDefinition includes
Implement OCLProcessDialect that extends JavaProcessDialect
Output ParameterMapping, bindingRefinement and scoped subscriptions
Recursive subscriptions, parameterizable


2. To test
Sentry.Conditions
Sentries with multiple onParts
CaseTask.no sentry
CaseTask.requiredRule
HumanTask.no sentry
HumanTask.requiredRule
*.repetitionRule
Test that suspension works for PlanItemInstanceFactories and Event

3. To implement

Sentry.condition without onParts

Process/Case Task
 - parameter transformation
 - REENABLE,REACTIVATE,PARENT_SUSPEND*, PARENT_RESUME*, CREATE

CaseModel:
 - direct exit Criteria *
 - REACTIVATE (from Failed,Terminated, Completed?)*
 
Stage:
 - no sentry *
 - requiredRule *
 - automaticActivationRule *
 - stagePlanItem's exit and its event *
 - manual completion *
 - exit criteria achieved *
 - EXIT*,DISABLE*,ENABLE*,MANUAL_START*,START*,COMPLETE?,TERMINATE*,FAULT*,SUSPEND*,RESUME*,CREATE,REENABLE,REACTIVATE,PARENT_SUSPEND*, PARENT_RESUME*
 - auto completion, use ItemControl.requiredRule *

Human Task
 - CREATE,REENABLE,REACTIVATE,PARENT_SUSPEND*, PARENT_RESUME*


Planning Tables:
 - Planning Table object (string/xml representing the current state of tasks and assignments of roles/parameters)
 - Marshal this from/to the workItem
 - DiscretionaryItem
 - DiscretionaryItem.itemControl.requiredRule
 - ApplicabilityRule
 - Assigning tasks at runtime
 - Assigning caseParameters at runtime

plan fragment
contextRefs for rules








4. Difficult
With JCR Property.CHANGE events, try to get the original value and only fire events for ADD_/REMOVE_REFERENCE when they applicable - JCR limitation
Optimize caching of SubscriptionInfo and perhaps even other OCM objects IN OCMSubscriptioinManager

5. Planned Extensions
Generate JCR node types (CND) for tasks - REFERENCE to casefileitem. Make sure Jahia will create it in the correct way
Planning with quotes/costing for subsequent activities
milestone with cost breakdown
Support for more time formats
In expressions inside a Task, make the CaseParameters available. This would help with automatic selection of other parameters based on one input parameter
Reversing Java classes to UML for OCL expressions
Allowing SentryInstances and OnPartInstances to be created at runtime

6.Refactoring:
Clean up all the validPeers and validParents


7. Questions for OMG:
When a Stage needs to be completed manually, which users should be allowed to do that? Same goes for suspend/resume/terminate/close etc.
In the notation examples, it seems there are Discretionary items that also have entryCriteratia. How so?
For stages and tasks, when they are enabled and repititionRule=true, it should create a new instance, but what happens to the
instance that was already in the available state?
Understood that repetitionRules are not relevant tot EventListeners. However, it is acknowledged that timer events can repeat, and it is imaginable that a UserEvent occur more than once. Milestones can definitely occur many times.
7.5.3. does not include Timer/UserEvents in the discussion of RequiredRules, however 5.4.11.2 does, but again it is excluded in table 42. It is easy to imagine that an event is required. 
Table 49 does not list the exit transition for CaseInstances - which transition will occur when the Case's casePlanModel Stage reaches its exitCriteria? 
Does table 52 pertain to the Stage instance representing the casePLanModel as well? If so, what do we do with the re-active transition propagation to subelements?


Discrepancies in XSD:
  In the XSD, TimerEventListener.timerExpression is a fully fledged expression, but in the spec it is just string. Does the result still have to be ISO-8601 compliant?
  AuthorizedRoleRefs for user events?
  parentTerminate StandardEvent absent
8. Mismatches with jBPM/WS-Human Task:
8.1. For a Task representing a Case, Completed is semi-terminal state, but for WS-human Task it is terminal - no "re-activate" transition
8.2. For a Task representing a Human/Case/Process Task, Failed is a semi-terminal state, bit for WS-human Task it is terminal
8.3. For a Task representing a Case, there is no "close" transition.
8.4. For a Task representing a Human/Case/Process Task, WS:Obsolete/CMMN:Disabled is a semi-terminal state, bit for WS-human Task it is terminal - no "re-enable" transition
8.5. I need to update Task parameters without performing a transition at all. (e.g. canComplete, input assignment during planning,fault info) - maybe I can use a workItemHandler that connects directly to the TaskService
8.6. 
