1. Done and Tested
JCR/OCM persistent subscriptions
 - scope of subscriptions
 - bindingRefined
 - throwing CREATE,DELETE,ADD_CHILD,REMOVE_CHILD,ADD_REFERENCE,REMOVE_REFERENCE and UPDATE events

JCR/OCM demarcated subscriptions
 - throwing CREATE,DELETE,ADD_CHILD,REMOVE_CHILD,ADD_REFERENCE,REMOVE_REFERENCE and UPDATE events

JPA/Hibernate persistent subscriptions
 - scope of subscriptions 
 - bindingRefined
 - throwing CREATE,DELETE,ADD_CHILD,REMOVE_CHILD,ADD_REFERENCE,REMOVE_REFERENCE and UPDATE events

JPA/Hibernate demarcated subscriptions
 - throwing CREATE,DELETE,ADD_CHILD,REMOVE_CHILD,ADD_REFERENCE,REMOVE_REFERENCE and UPDATE events

Timer Event
 - OCCUR

Milestone
 - entry criteria achieved
 - requiredRule
 - OCCUR

CaseTask
 - basic call
 - entry criteria achieved
 - automaticActivationRule
 - exit criteria achieved
 - parameterMapping
 - EXIT,DISABLE,ENABLE,MANUAL_START,START,COMPLETE,TERMINATE,FAULT,SUSPEND,RESUME

Human Task
 - automaticActivationRule
 - entry criteria achieved
 - exit criteria achieved
 - EXIT,DISABLE,ENABLE,MANUAL_START,START,COMPLETE,TERMINATE,FAULT,SUSPEND,RESUME

UserEvent
 - OCCUR 
 
CaseModel
 - auto completion


Generate OCM and JPA test Java classes from UML along with CaseFileItemDefinition includes
Implement OCLProcessDialect that extends JavaProcessDialect
Output ParameterMapping, bindingRefinement and scoped subscriptions
Recursive subscriptions, parameterizable


2. To test
Sentry.Conditions
Sentries with multiple onParts


3. To implement

Process/Case Task
 - no sentry *
 - repetitionRule *
 - requiredRule *
 - parameter transformation
 - REENABLE,REACTIVATE,PARENT_SUSPEND*, PARENT_RESUME*, CREATE

CaseModel:
 - direct exit Criteria *
 - manual completion *
 - CREATE, TERMINATE*,FAULT*, CLOSE *, COMPLETE*,SUSPEND*,REACTIVATE*
 
Stage:
 - no sentry *
 - repetitionRule *
 - requiredRule *
 - automaticActivationRule *
 - stagePlanItem's exit and its event *
 - manual completion *
 - exit criteria achieved *
 - EXIT*,DISABLE*,ENABLE*,MANUAL_START*,START*,COMPLETE?,TERMINATE*,FAULT*,SUSPEND*,RESUME*,CREATE,REENABLE,REACTIVATE,PARENT_SUSPEND*, PARENT_RESUME*
 - auto completion, use ItemControl.requiredRule *

Human Task
 - no sentry *
 - repetitionRule *
 - requiredRule *
 - CREATE,REENABLE,REACTIVATE,PARENT_SUSPEND*, PARENT_RESUME*

Milestone
 - repetitionRule *
 - CREATE,SUSPEND*,RESUME*,TERMINATE*,PARENT_TERMINATE*

UserEvent
 - CREATE,SUSPEND*,RESUME*,TERMINATE*,PARENT_TERMINATE*

TimerEvent
 - CREATE,SUSPEND*,RESUME*,TERMINATE*,PARENT_TERMINATE*

Planning Tables:
 - Planning Table object (string/xml representing the current state of tasks and assignments of roles/parameters)
 - Marshal this from/to the workItem
 - DiscretionaryItem
 - ApplicabilityRule
 - Assigning tasks at runtime
 - Assigning caseParameters at runtime

plan fragment
contextRefs for rules


4. Difficult
With JCR Property.CHANGE events, try to get the original value and only fire events for ADD_/REMOVE_REFERENCE when they applicable - JCR limitation
Optimize caching of SubscriptionInfo and perhaps even other OCM objects IN OCMSubscriptioinManager

5. Planned Extensions
Generate JCR node types (CND) for tasks - REFERENCE to casefileitem. Make sure Jahia will create it in the correct way
Planning with quotes/costing for subsequent activities
milestone with cost breakdown
Support for more time formats
In expressions inside a Task, make the CaseParameters available. This would help with automatic selection of other parameters based on one input parameter
Reversing Java classes to UML for OCL expressions
Allowing SentryInstances and OnPartInstances to be created at runtime

6.Refactoring:
Clear up confusion between org.pavanecce.cmmn.jbpm.flow.builder.AbstractCaseElementHandler and org.pavanecce.cmmn.jbpm.flow.builder.AbstractPlanModelElementHandler


7. Questions for OMG:
When a Stage needs to be closed manually, which users should be allowed to do that? Same goes for suspend/resume/terminate etc.
In the notation examples, it seems there are Discretionary items that also have entryCriteratia. How so?
For stages and tasks, when they are enabled and repititionRule=true, it should create a new instance, but what happens to the
instance that was already in the available state?
Discrepancies in XSD:
  In the XSD, TimerEventListener.timerExpression is a fully fledged expression, but in the spec it is just string. Does the result still have to be ISO-8601 compliant?
  AuthoizedRoleRefs for user events?


